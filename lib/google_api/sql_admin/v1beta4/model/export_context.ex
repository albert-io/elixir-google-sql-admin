# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.SQLAdmin.V1beta4.Model.ExportContext do
  @moduledoc """
  Database instance export context.

  ## Attributes

  - csvExportOptions (ExportContextCsvExportOptions):  Defaults to: `null`.
  - databases ([String.t]): Databases to be exported. MySQL instances: If fileType is SQL and no database is specified, all databases are exported, except for the mysql system database. If fileType is CSV, you can specify one database, either by using this property or by using the csvExportOptions.selectQuery property, which takes precedence over this property. PostgreSQL instances: If fileType is SQL, you must specify one database to be exported. A fileType of CSV is not supported for PostgreSQL instances. Defaults to: `null`.
  - fileType (String.t): The file type for the specified uri. SQL: The file contains SQL statements. CSV: The file contains CSV data. CSV is not supported for PostgreSQL instances. Defaults to: `null`.
  - kind (String.t): This is always sql#exportContext. Defaults to: `null`.
  - sqlExportOptions (ExportContextSqlExportOptions):  Defaults to: `null`.
  - uri (String.t): The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form gs://bucketName/fileName. If the file already exists, the requests succeeds, but the operation fails. If fileType is SQL and the filename ends with .gz, the contents are compressed. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :csvExportOptions => GoogleApi.SQLAdmin.V1beta4.Model.ExportContextCsvExportOptions.t(),
          :databases => list(any()),
          :fileType => any(),
          :kind => any(),
          :sqlExportOptions => GoogleApi.SQLAdmin.V1beta4.Model.ExportContextSqlExportOptions.t(),
          :uri => any()
        }

  field(:csvExportOptions, as: GoogleApi.SQLAdmin.V1beta4.Model.ExportContextCsvExportOptions)
  field(:databases, type: :list)
  field(:fileType)
  field(:kind)
  field(:sqlExportOptions, as: GoogleApi.SQLAdmin.V1beta4.Model.ExportContextSqlExportOptions)
  field(:uri)
end

defimpl Poison.Decoder, for: GoogleApi.SQLAdmin.V1beta4.Model.ExportContext do
  def decode(value, options) do
    GoogleApi.SQLAdmin.V1beta4.Model.ExportContext.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SQLAdmin.V1beta4.Model.ExportContext do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
