# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.SQLAdmin.V1beta4.Model.IpConfiguration do
  @moduledoc """
  IP Management configuration.

  ## Attributes

  - authorizedNetworks ([AclEntry]): The list of external networks that are allowed to connect to the instance using the IP. In CIDR notation, also known as &#39;slash&#39; notation (e.g. 192.168.100.0/24). Defaults to: `null`.
  - ipv4Enabled (boolean()): Whether the instance should be assigned an IP address or not. Defaults to: `null`.
  - privateNetwork (String.t): The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, /projects/myProject/global/networks/default. This setting can be updated, but it cannot be removed after it is set. Defaults to: `null`.
  - requireSsl (boolean()): Whether SSL connections over IP should be enforced or not. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :authorizedNetworks => list(GoogleApi.SQLAdmin.V1beta4.Model.AclEntry.t()),
          :ipv4Enabled => any(),
          :privateNetwork => any(),
          :requireSsl => any()
        }

  field(:authorizedNetworks, as: GoogleApi.SQLAdmin.V1beta4.Model.AclEntry, type: :list)
  field(:ipv4Enabled)
  field(:privateNetwork)
  field(:requireSsl)
end

defimpl Poison.Decoder, for: GoogleApi.SQLAdmin.V1beta4.Model.IpConfiguration do
  def decode(value, options) do
    GoogleApi.SQLAdmin.V1beta4.Model.IpConfiguration.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SQLAdmin.V1beta4.Model.IpConfiguration do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
