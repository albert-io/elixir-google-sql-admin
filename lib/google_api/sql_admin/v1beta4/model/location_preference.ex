# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.SQLAdmin.V1beta4.Model.LocationPreference do
  @moduledoc """
  Preferred location. This specifies where a Cloud SQL instance should preferably be located, either in a specific Compute Engine zone, or co-located with an App Engine application. Note that if the preferred location is not available, the instance will be located as close as possible within the region. Only one location may be specified.

  ## Attributes

  - followGaeApplication (String.t): The AppEngine application to follow, it must be in the same region as the Cloud SQL instance. Defaults to: `null`.
  - kind (String.t): This is always sql#locationPreference. Defaults to: `null`.
  - zone (String.t): The preferred Compute Engine zone (e.g. us-central1-a, us-central1-b, etc.). Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :followGaeApplication => any(),
          :kind => any(),
          :zone => any()
        }

  field(:followGaeApplication)
  field(:kind)
  field(:zone)
end

defimpl Poison.Decoder, for: GoogleApi.SQLAdmin.V1beta4.Model.LocationPreference do
  def decode(value, options) do
    GoogleApi.SQLAdmin.V1beta4.Model.LocationPreference.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SQLAdmin.V1beta4.Model.LocationPreference do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
