# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.SQLAdmin.V1beta4.Model.User do
  @moduledoc """
  A Cloud SQL user resource.

  ## Attributes

  - host (String.t): The host name from which the user can connect. For insert operations, host defaults to an empty string. For update operations, host is specified as part of the request URL. The host name cannot be updated after insertion. Defaults to: `null`.
  - etag (String.t): This field is deprecated and will be removed from a future version of the API. Defaults to: `null`.
  - instance (String.t): The name of the Cloud SQL instance. This does not include the project ID. Can be omitted for update since it is already specified on the URL. Defaults to: `null`.
  - kind (String.t): This is always sql#user. Defaults to: `null`.
  - name (String.t): The name of the user in the Cloud SQL instance. Can be omitted for update since it is already specified in the URL. Defaults to: `null`.
  - password (String.t): The password for the user. Defaults to: `null`.
  - project (String.t): The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable. Can be omitted for update since it is already specified on the URL. Defaults to: `null`.
  """

  use GoogleApi.Gax.ModelBase

  @type t :: %__MODULE__{
          :host => any(),
          :etag => any(),
          :instance => any(),
          :kind => any(),
          :name => any(),
          :password => any(),
          :project => any()
        }

  field(:host)
  field(:etag)
  field(:instance)
  field(:kind)
  field(:name)
  field(:password)
  field(:project)
end

defimpl Poison.Decoder, for: GoogleApi.SQLAdmin.V1beta4.Model.User do
  def decode(value, options) do
    GoogleApi.SQLAdmin.V1beta4.Model.User.decode(value, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.SQLAdmin.V1beta4.Model.User do
  def encode(value, options) do
    GoogleApi.Gax.ModelBase.encode(value, options)
  end
end
